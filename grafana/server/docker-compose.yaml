version: '3.8'

networks:
  monitoring:
    driver: bridge
    
#volumes:
#  prometheus_data:  /opt/monitoring/prometheus/data

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)(9377|/)'
    expose:
      - 9100
#    ports:
#      - 9100:9100
    environment:
      TZ: "Europe/Kiev"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
#    user: root
    volumes:
      - /opt/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /opt/monitoring/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
#      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - 9090:9090
    environment:
      TZ: "Europe/Kiev"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
#    user: root
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    environment:
      TZ: "Europe/Kiev"
    networks:
      - monitoring
#######Monitoring Containers
#  cadvisor-exporter:
#    container_name: "cadvisor-exporter"
#    image: google/cadvisor
#    ports:
#      - "9200:8080"
#    volumes:
#      - "/:/rootfs:ro"
#      - "/var/run:/var/run:rw"
#      - "/sys:/sys:ro"
#      - "/var/lib/containers/:/var/lib/docker:ro"
#    restart: unless-stopped