# Create NetWork mynet "podman\docker network create mynet --driver bridge"
# Create folders zookeeper_data and kafka_data "podman\docker volume create zookeeper_data"
version: "3"

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
   mynet:
     driver: bridge

services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    volumes:
       - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - mynet  
    restart: always

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
      - '9093:9093'
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://192.168.1.104:9092,EXTERNAL://192.168.1.104:9093 #IP address host
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - mynet
    restart: always
    
  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    container_name: kafka-ui
    hostname: kafka-ui
    ports:
     - '8080:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafkadocker
#      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
#      - KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCO=true
    depends_on:
      - kafka
    networks:
      - mynet
    restart: always