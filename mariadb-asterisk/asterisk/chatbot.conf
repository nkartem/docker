[sub-callerid-check]

exten=>s,1,            Verbose(sub-callerid-check)

exten=>s,n,            GotoIf($[${CALLERID(num):-12} = 525585264324]?num_1); ADO Interview
exten=>s,n,            GotoIf($[${CALLERID(num):-12} = 525585264398]?num_2); Project name - La Comer
exten=>s,n,            GotoIf($[${CALLERID(num):-10} = 8772263925]?num_3);   Project name - Pilot - IUN-01-2019 (English) , Project code – 97
exten=>s,n,            GotoIf($[${CALLERID(num):-10} = 8666377201]?num_4);   URL_IRN #800 General Interview
exten=>s,n,            GotoIf($[${CALLERID(num):-12} = 525585264930]?num_5); Project name - Banorte
exten=>s,n,            GotoIf($[${CALLERID(num):-10} = 8668245072]?num_6);   Project name - Pilot - IUN-01-2019 (Spa) , Project code – 107


exten=>s,n,            Goto(default)

exten=>s,n(num_1),     Set(orderID=4); ADO Interview
;orderID               4
exten=>s,n,            Set(interviewID=118);
exten=>s,n,            Set(customerID=34);
exten=>s,n,            Set(orderID_TST=5); Project name - ADO, TEST AC
exten=>s,n,            Set(LANG=Spa);
exten=>s,n,            Return()

exten=>s,n(num_2),     Set(orderID=6); Project name - La Comer
;orderID               6
exten=>s,n,            Set(interviewID=117);
exten=>s,n,            Set(customerID=35);
exten=>s,n,            Set(orderID_TST=7); Project name - La Comer, TEST AC
exten=>s,n,            Set(LANG=Spa);
exten=>s,n,            Return()

exten=>s,n(num_3),     Set(orderID=8); iUnlim_IRN_97
;orderID               8
exten=>s,n,            Set(interviewID=97);
exten=>s,n,            Set(customerID=14);
exten=>s,n,            Set(orderID_TST=18);
exten=>s,n,            Set(LANG=Eng);
exten=>s,n,            Return()

exten=>s,n(num_6),     Set(orderID=10); iUnlim_IRN_107 AC 1000 ENG | NEW - order - 10
; orderID               10
exten=>s,n,            Set(interviewID=107);
exten=>s,n,            Set(customerID=14);
exten=>s,n,            Set(orderID_TST=11);  iUnlim_IRN_107 AC 20 ENG | NEW - order - 11
exten=>s,n,            Set(LANG=Spa);
exten=>s,n,            Return()

exten=>s,n(num_4),     Set(orderID=14); Test URL_IRN #800 General Interview
; orderID               14
exten=>s,n,            Set(interviewID=42);
exten=>s,n,            Set(customerID=27);
exten=>s,n,            Set(LANG=Eng);
exten=>s,n,            Goto(iunlim,444,1)
exten=>s,n,            Return()

exten=>s,n(num_5),     Set(orderID=17); Banorte Pilot 1000 AC
; orderID               17
exten=>s,n,            Set(interviewID=101);
exten=>s,n,            Set(customerID=3);
exten=>s,n,            Set(orderID_TST=16); Test 20 AC for Banorte
exten=>s,n,            Set(LANG=Spa);
exten=>s,n,            Return()

exten=>s,n(default),   Set(orderID=14); TEST
; orderID               14
exten=>s,n,            Set(interviewID=42);
exten=>s,n,            Set(customerID=27);
exten=>s,n,            Set(orderID_TST=14);
exten=>s,n,            Set(LANG=Eng);

exten=>s,n,            Return()



[sub-IRN-answer]
exten=>s,1,            Verbose(------------------------------- A N S W E R ------------------------------------------)
exten=>s,n,            Set(sound=/usr/share/asterisk/sounds/chat_bot)
exten=>s,n,            Answer
exten=>s,n,            Set(FULL_AUDIO=${WavDir}/FullCallRecord/${NodeID}_${DES}_${from}_${STRFTIME(${EPOCH},America/New_York,%Y%m%d-%H%M%S)})
exten=>s,n,            MixMonitor(${FULL_AUDIO}.wav)
exten=>s,n,            Wait(0.5)
exten=>s,n,            Set(DES=${COUNT}_${CALLERID(num)})
exten=>s,n,            Set(ivr_type=\\"advanced\\")


exten=>s,n,            Set(msg_time= "{\n\\"date\\": \\"${STRFTIME(${EPOCH},America/New_York,%F)}\\",\n\\"time\\": \\"${STRFTIME(${EPOCH},America/New_York,%T)}\\",\n\\"utc_offset\\": \\"${STRFTIME(${EPOCH},America/New_York,%z):0:3}:00\\"\n}")
exten=>s,n,            System(echo -e ${msg_time}  > ${RraDir}/tmp/Input_Sync/answer_${DES}.txt)

exten=>s,n,            System(chmod -c 0777 ${RraDir}/tmp/Input_Sync/answer_${DES}.txt)
exten=>s,n,            System(mv ${RraDir}/tmp/Input_Sync/answer_${DES}.txt ${RraDir}/tmp/Input)

exten=>s,n,            Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_1_${LANG}_${SPEAKER}); Hello! And thank you for calling The Interview Center.
exten=>s,n,            Set(CC_Try=0)


exten=>s,n(CC),        GotoIf($[${CC_Try} >= 10]?sub-hangup,s,hangup)
exten=>s,n,            Read(CC,${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_2_${LANG}_${SPEAKER},10,,,15) ;Using your telephone`s keypad, please enter your Numeric Code, followed by the pound or hash key.

exten=>s,n,            Set(CC=${FILTER(0-9,${CC})})

exten=>s,n,            Set(CC_Try=$[${CC_Try} + 1])

exten=>s,n(null),      GotoIf($[${ISNULL(${CC})}]?:len)
exten=>s,n,            Set(CC=null)
exten=>s,n,            Goto(msg)


exten=>s,n(len),       GotoIf($[${LEN(${CC})} < 4]?:say)
exten=>s,n,            Set(CC=\\"${CC}\\")
exten=>s,n,            Goto(msg)

exten=>s,n(cc_frmt),   Set(CC=\\"${CC}\\")
exten=>s,n(msg),       Set(msg_time= \n\\"date\\": \\"${STRFTIME(${EPOCH},America/New_York,%F)}\\",\n\\"time\\": \\"${STRFTIME(${EPOCH},America/New_York,%T)}\\",\n\\"utc_offset\\": \\"${STRFTIME(${EPOCH},America/New_York,%z):0:3}:00\\"\n)

exten=>s,n,            Set(valid=false)

;exten=>s,n,            Set(JSON_accessID= "{\n\\"ivr_type\\": ${ivr_type},\n \\"access_code\\": null ,\n\\"irn\\": ${CC},${msg_time}}")
exten=>s,n,            Set(JSON_accessID=  "{\n\\"auth_by_irn\\": {\n\\"irn\\": ${CC},\n\\"customer_id\\": \\"${customerID}\\",\n\\"project_code\\": \\"${interviewID}\\",\n\\"valid\\": ${valid}\n},${msg_time}\n}")

exten=>s,n,            System(echo -e ${JSON_accessID}  > ${RraDir}/tmp/Input_Sync/accessID_${DES}.txt)
exten=>s,n,            System(chmod -c 0777 ${RraDir}/tmp/Input_Sync/accessID_${DES}.txt)
exten=>s,n,            System(mv ${RraDir}/tmp/Input_Sync/accessID_${DES}.txt ${RraDir}/tmp/Input)

exten=>s,n,            Set(MSSG=${RraDir}/tmp/Output/accessID_${DES}.txt)
exten=>s,n,            Gosub(sub-file_exist_check,s,1)
exten=>s,n,            System(rm -f ${MSSG})
exten=>s,n,            Goto(CC)


exten=>s,n(say),       Gosub(sub-say-CN,say,1)
exten=>s,n,            Wait(1)


exten=>s,n,            Verbose( Claim Code = ${CC}  )
exten=>s,n,            Set(P1_Try=0)

exten=>s,n(P1),        GotoIf($[${P1_Try} >= 10]?sub-hangup,s,hangup)

exten=>s,n,            Read(P1,${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_4_${LANG}_${SPEAKER},1,,,10) ;If the numbers you entered are correct please press 1 to start the interview. If the numbers you entered are not correct, please press 2.
exten=>s,n,            Set(P1_Try=$[${P1_Try} + 1])
exten=>s,n,            GotoIf($[${ISNULL(${P1})}]?P1:);
exten=>s,n,            GotoIf($[${P1}=2]?cc_frmt)
exten=>s,n,            GotoIf($[${P1}=1]?return)
exten=>s,n,            Goto(P1)

exten=>s,n(return),    Set(DES=${COUNT}_${CALLERID(num)})

;exten=>s,n,            Set(msg_time= "{\n\\"date\\": \\"${STRFTIME(${EPOCH},America/New_York,%F)}\\",\n\\"time\\": \\"${STRFTIME(${EPOCH},America/New_York,%T)}\\",\n\\"utc_offset\\": \\"${STRFTIME(${EPOCH},America/New_York,%z):0:3}:00\\"\n}")
;exten=>s,n,            System(echo -e ${msg_time}  > ${RraDir}/tmp/Input_Sync/intvwActivated_${DES}.txt)
;exten=>s,n,            System(chmod -c 0777 ${RraDir}/tmp/Input_Sync/intvwActivated_${DES}.txt)
;exten=>s,n,            System(mv ${RraDir}/tmp/Input_Sync/intvwActivated_${DES}.txt ${RraDir}/tmp/Input)

exten=>s,n,            Set(P1=0)
exten=>s,n,            Set(CC_Try=0)
exten=>s,n,            Set(P1_Try=0)
exten=>s,n,            Return


[sub-URL-IRN-answer]
;Gosub(context,extension,priority)

exten=>s,1,            Verbose(------------------------------- A N S W E R ------------------------------------------)
exten=>s,n,            Answer
exten=>s,n,            Set(FULL_AUDIO=${WavDir}/FullCallRecord/${NodeID}_${DES}_${from}_${STRFTIME(${EPOCH},America/New_York,%Y%m%d-%H%M%S)})
exten=>s,n,            MixMonitor(${FULL_AUDIO}.wav,,/usr/bin/lame --preset standard ${FULL_AUDIO}.wav ${FULL_AUDIO}.mp3)
exten=>s,n,            Wait(0.5)
exten=>s,n,            Set(DES=${COUNT}_${CALLERID(num)})

exten=>s,n,            Read(URL_IRN,,10,,,12)
exten=>s,n,            GotoIf($[$[${ISNULL(${URL_IRN})}] | $[${LEN(${URL_IRN})} < 4]]?iunlim,333,ans:);

exten=>s,n,            Set(msg_time= "{\n\\"date\\": \\"${STRFTIME(${EPOCH},America/New_York,%F)}\\",\n\\"time\\": \\"${STRFTIME(${EPOCH},America/New_York,%T)}\\",\n\\"utc_offset\\": \\"${STRFTIME(${EPOCH},America/New_York,%z):0:3}:00\\"\n}")
exten=>s,n,            System(echo -e ${msg_time}  > ${RraDir}/tmp/Input_Sync/answer_${DES}.txt)

exten=>s,n,            System(chmod -c 0777 ${RraDir}/tmp/Input_Sync/answer_${DES}.txt)
exten=>s,n,            System(mv ${RraDir}/tmp/Input_Sync/answer_${DES}.txt ${RraDir}/tmp/Input)


exten=>s,n,            Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_1-1_Eng_${SPEAKER}); Welcome.  During today’s call you will be asked several questions that only require YES or NO responses. Before you answer yes or no, please wait for the question to be completely finished. When the question is finished, you’ll hear the following tone *beep* which is the signal for you to answer either yes or no.
exten=>s,n,            Wait(0.5)
exten=>s,n,            Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_5-1_Eng_${SPEAKER}); Once you have answered the first set of questions you will be asked the exact same questions a second time; and depending on call quality, possibly a third time. To ensure the quality of this call, and ensure all of your responses are accepted, please do not cough, sneeze, clear your throat, eat, or drink during the interview.

exten=>s,n,            Set(P1_Try=0)

exten=>s,n,            Verbose( URL IRN = ${URL_IRN}  )

exten=>s,n(P1),        GotoIf($[${P1_Try} >= 3]?sub-hangup,s,hangup)
exten=>s,n,            Read(P1,${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_4-1_Eng,1,,,10) ;Please press 1 to start the questions.
exten=>s,n,            Set(P1_Try=$[${P1_Try} + 1])
exten=>s,n,            GotoIf($[${ISNULL(${P1})}]?P1:);
exten=>s,n,            GotoIf($[${P1}=1]?return)
exten=>s,n,            Goto(P1)

exten=>s,n(return),    Set(DES=${COUNT}_${CALLERID(num)}-${URL_IRN})
exten=>s,n,            Set(P1=0)
exten=>s,n,            Return



[sub-say-CN]
exten => say,1,Set(LENTH=${LEN(${CC})})
   same => n,Set(ROUND=0)
   same => n,Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_3_${LANG}_${SPEAKER}); You entered the following numbers.
   same => n,Wait(1)
   same => n(st-loop),Verbose(LENTH = ${LENTH}  ROUND = ${ROUND})})
   same => n,GotoIf($[(${LENTH} > ${ROUND})]?:end-loop)
   same => n,Verbose(LENTH = ${LENTH}  ROUND = ${ROUND})})
   same => n,Playback(${IntroDir}/${LANG}/${SPEAKER}/Number_${CC:${ROUND}:1}_${LANG}_${SPEAKER})
   same => n,Wait(0,5)
   same => n,Set(ROUND=$[${ROUND}+1])
   same => n,Goto(st-loop)
   same => n(end-loop),NoOp()
   same => n,Return()


[chatbot-AC-provide-new]

exten=>s,1(provide),   Verbose(--------------------ACCESSCODE TO CALL VIEWER ----------------------------------------)

exten=>s,n,            GotoIf($["${CC}"="0000"]?test:productn)

;exten=>s,n(test),      Set(DTMF=${ODBC_CHECK-AC(${orderID_TST})}); Provide TEST AС OLD
;exten=>s,n(test),      Set(DTMF=${ODBC_CHECK-AC-2(${interviewID},27)}); Provide TEST AС by InterviewID & customerID (27 - Test Client)
exten=>s,n(test),       Verbose( Provide TEST AС interviewID: ${interviewID} and  customerID: ${customerID} )
exten=>s,n,             Set(customerID=27)
;exten=>s,n,            Set(AAC=${ODBC_CHECK-AAC(${interviewID},27)}); ProvideCOUNT of AVAILABLE TEST AС by InterviewID & customerID (27 - Test Client)
;exten=>s,n,            Verbose( Provide TEST AС interviewID: ${interviewID} and  customerID: ${customerID} )
exten=>s,n,             Goto(accessID)


;exten=>s,n(productn),  Set(DTMF=${ODBC_CHECK-AC(${orderID})}); Provide PRODUCT AС OLD
;exten=>s,n(productn),  Set(DTMF=${ODBC_CHECK-AC-2(${interviewID},${customerID})}); Provide PRODUCT AС by InterviewID & customerID
;exten=>s,n,            Set(AAC=${ODBC_CHECK-AAC(${interviewID},${customerID})});  ProvideCOUNT of AVAILABLE PRODUCT AС by InterviewID & customerID
exten=>s,n(productn),   Verbose( Provide PRODUCT AС interviewID: ${interviewID} and  customerID: ${customerID} )
exten=>s,n,             Goto(accessID)



;exten=>s,n(modify),    Set(Code_Lenth=${LEN(${DTMF})})
;exten=>s,n,            GotoIf($[(${Code_Lenth} < 9)]?:message)
;exten=>s,n,            Set(DTMF=0${DTMF})
;exten=>s,n,            GotoIf($[(${DTMF} = 0)]?tech_prob)
;exten=>s,n(message),   Verbose(Access = ${DTMF})


exten=>s,n(accessID),  Set(msg_time= \n\\"date\\": \\"${STRFTIME(${EPOCH},America/New_York,%F)}\\",\n\\"time\\": \\"${STRFTIME(${EPOCH},America/New_York,%T)}\\",\n\\"utc_offset\\": \\"${STRFTIME(${EPOCH},America/New_York,%z):0:3}:00\\"\n)
exten=>s,n,            Set(CC=\\"${CC}\\")
exten=>s,n,            Set(valid=true)
;exten=>s,n,            Set(JSON_accessID= "{\n\\"ivr_type\\": ${ivr_type},\n \\"access_code\\": null ,\n\\"irn\\": ${CC},${msg_time}}")
exten=>s,n,            Set(JSON_accessID=  "{\n\\"auth_by_irn\\": {\n\\"irn\\": ${CC},\n\\"customer_id\\": \\"${customerID}\\",\n\\"project_code\\": \\"${interviewID}\\",\n\\"valid\\": ${valid}\n},${msg_time}\n}")


;exten=>s,n,            Set(JSON_accessID= "{\n\\"ivr_type\\": ${ivr_type},\n\\"access_code\\": \\"${DTMF}\\",\n\\"irn\\": \\"${CC}\\" ,${msg_time}}")
exten=>s,n,            System(echo -e ${JSON_accessID}  > ${RraDir}/tmp/Input_Sync/accessID_${DES}.txt)

exten=>s,n,            System(chmod -c 0777 ${RraDir}/tmp/Input_Sync/accessID_${DES}.txt)
exten=>s,n,            System(mv ${RraDir}/tmp/Input_Sync/accessID_${DES}.txt ${RraDir}/tmp/Input)
exten=>s,n,            Verbose(        Sent "accessID" mes : Access Code = ${DTMF}   callNumber=${COUNT}  callerID=${USER})
exten=>s,n,            Wait(2)
exten=>s,n,            Verbose(--------------------CALLVIEWER TO ASTERISK --------=---------------------------------)

exten=>s,n,            Set(MSSG=${RraDir}/tmp/Output/accessID_${DES}.txt)
exten=>s,n,            Gosub(sub-file_exist_check,s,1)

exten=>s,n,            Set(msg_time= "{\n\\"date\\": \\"${STRFTIME(${EPOCH},America/New_York,%F)}\\",\n\\"time\\": \\"${STRFTIME(${EPOCH},America/New_York,%T)}\\",\n\\"utc_offset\\": \\"${STRFTIME(${EPOCH},America/New_York,%z):0:3}:00\\"\n}")
exten=>s,n,            System(echo -e ${msg_time}  > ${RraDir}/tmp/Input_Sync/intvwInitiated_${DES}.txt)
exten=>s,n,            System(chmod -c 0777 ${RraDir}/tmp/Input_Sync/intvwInitiated_${DES}.txt)
exten=>s,n,            System(mv ${RraDir}/tmp/Input_Sync/intvwInitiated_${DES}.txt ${RraDir}/tmp/Input)



;exten=>s,n,            SET(INFO=${FILE(${RraDir}/tmp/Output/accessID_${DES}.txt,0,34)}); reading of accessID message
exten=>s,n,            SET(INFO=${FILE(${RraDir}/tmp/Output/accessID_${DES}.txt)}); reading of accessID message
exten=>s,n,            Verbose(INFO=${INFO})
exten=>s,n,            Set(ACCESS=${CUT(INFO,-,1)});                            OK/No
exten=>s,n,            Set(NUMQUEST=${CUT(INFO,-,2)});                  from 6 to 30
exten=>s,n,            Set(INTV_LANG=${CUT(INFO,-,3)});                 Eng/Spa/Pas/Dar/Far/Tag
exten=>s,n,            Set(INT_FILE=${IntDir}/${CUT(INFO,-,4)});        full path to file
exten=>s,n,            Set(INT_FNAME=${CUT(INFO,-,4)});                 file of interview:  I_0253_10_Eng.txt
;exten=>s,n,            Set(LEN=${CUT(INFO,-,5)});                                       number of symbols inside the interview file
exten=>s,n,            Set(DTMF=${CUT(INFO,-,5):0:9});                                       number of symbols inside the interview file
exten=>s,n,            Set(INT_SPEAKER=${CUT(INT_FNAME,_,5)})
exten=>s,n,            Set(NAMENUM=${CUT(INT_FNAME,_,3)})
exten=>s,n,            Verbose(SPEAKER=${SPEAKER} NAMENUM=${NAMENUM} )

exten=>s,n,            SET(ALLQ=${FILE(${Intrws}${INT_FILE}.din,0,${LEN})});    list of questionIDs as one string
exten=>s,n,            SET(ALLQ=${FILE(${Intrws}${INT_FILE}.din)});    list of questionIDs as one string
exten=>s,n,            Verbose(Text = ${ALLQ})


exten=>s,n,            Verbose(ACCESS=${ACCESS}  NUMQUEST=${NUMQUEST} LANG=${INTV_LANG})
exten=>s,n,            Verbose(IntFile=${INT_FILE} LEN=${LEN})
exten=>s,n,            Verbose(Interview File = ${INT_FNAME})
;exten=>s,n,            Set(LANG=${INTV_LANG})
exten=>s,n,            GotoIf($[${ACCESS} = OK]?return); to deleting AC BL information
exten=>s,n,            GotoIf($[${ACCESS} = NO]?tech_prob)
exten=>s,n,            Verbose(          The access message callNumber=${COUNT}  callerID=${USER} was not processed)
;exten=>s,n(tech_prob), Playback(${IntroDir}/${LANG}/${SPEAKER}/RRA_Phrase_15_${LANG}); There is a technical problem
exten=>s,n(tech_prob), Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_8_${LANG}_${SPEAKER}); The system requires additional technical approval to conduct this interview.  Please contact your interview administrator or manager to advise them you received this message.
exten=>s,n,            Goto(sub-hangup,s,hangup)

exten=>s,n(return),    Return


[sub-IRN-interview]
;Welcome briefing before the interview and interview.
;If REC = 0 - without interview recording.. If REC = 1 - with recording of the interview.
;------------ MS: Send message "beginInterview" and record the interview ----------------
exten=>s,1,             Verbose(sub-interview)

exten=>s,n,         Playback(${IntroDir}/${LANG}/${SPEAKER}/RRA_Phrase_3-1_short_${LANG}_${SPEAKER}); Hello, during today s interview, you ll be asked several simple questions that only require accurate yes or no responses.
exten=>s,n(long1),  Playback(${IntroDir}/${LANG}/${SPEAKER}/RRA_Phrase_3-3_${LANG}_${SPEAKER}); Before you answer yes or no, please wait

exten=>s,n,             Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_5_${LANG}_${SPEAKER}); Once you have answered the first set of interview questions you will be asked the exact same questions a second time; and depending on call quality, possibly a third time. To ensure the quality of this call, and that all of your interview responses are accepted, please do not cough, sneeze, clear your throat, eat or drink during the interview.
exten=>s,n,             Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_6_${LANG}_${SPEAKER}); Also, please respond to the questions clearly, with a normal speaking volume, while answering each question accurately with a either a YES or NO after you hear the following tone (beep).”


exten=>s,n,             Verbose(Returned Value = ${PLAYBACKSTATUS})
exten=>s,n,             Goto(ft)

exten=>s,n(st),         Wait(1)

exten=>s,n(short2),     Playback(${IntroDir}/${LANG}/${SPEAKER}/RRA_Phrase_6_short_1_${LANG}_${SPEAKER}); You will be asked a second time....short IVR

exten=>s,n(long2),      NoOp()

exten=>s,n(ft),         Wait(1)
exten=>s,n(repeat),     Playback(${IntroDir}/${LANG}/${SPEAKER}/RRA_Phrase_4_${LANG}_${SPEAKER}); The questions are about to begin

exten=>s,n,            Set(msg_time= "{\n\\"date\\": \\"${STRFTIME(${EPOCH},America/New_York,%F)}\\",\n\\"time\\": \\"${STRFTIME(${EPOCH},America/New_York,%T)}\\",\n\\"utc_offset\\": \\"${STRFTIME(${EPOCH},America/New_York,%z):0:3}:00\\"\n}")
exten=>s,n,            System(echo -e ${msg_time}  > ${RraDir}/tmp/Input_Sync/beginQuestSet_${DES}.txt)

exten=>s,n,            System(chmod -c 0777 ${RraDir}/tmp/Input_Sync/beginQuestSet_${DES}.txt)
exten=>s,n,            System(mv ${RraDir}/tmp/Input_Sync/beginQuestSet_${DES}.txt ${RraDir}/tmp/Input)


exten=>s,n,             Wait(2)

;------------ MS: Cycle of recording answers -------------------------------------
exten=>s,n,             SET(IN=0);                                                              pointer of the cycle
exten=>s,n,             SET(DURATION=0)
exten=>s,n(ct),         SET(NS=$[${IN}+1]);                                             answer number (beginning from 1)
exten=>s,n,             SET(QSandNquest={\n\\"_seq\\":${ATTEMPT},\n\\"n_quest\\":${NS}})
exten=>s,n,             Verbose(IN=${IN}  NS=${NS})
exten=>s,n,             Verbose(Play question ${NS})
exten=>s,n,             SET(FQ=${CUT(ALLQ,-,${NS})});                           questionID file
exten=>s,n,             Verbose(Play question Q_${FQ}_${INTV_LANG}_${INT_SPEAKER}.wav)
exten=>s,n,             Playback(${Qsts}/Q_${FQ:0:4}_${INTV_LANG}_${INT_SPEAKER})

exten=>s,n,             GotoIf($["${REC}"="0"]?:cntn)
exten=>s,n,             Wait(5.0)
exten=>s,n,             Goto(check)

exten=>s,n(cntn),       SET(SIGN=${FQ:-1});                                         special sign: N/R/L - neutral, relevant, long question
exten=>s,n,             GotoIf($[${SIGN}=L]?:s3)
exten=>s,n,             Set(DUR=10.0);                                                  duration of record for answer Long question (Your name?)
exten=>s,n,             Goto(rec5)
exten=>s,n(s3),         Set(DUR=5.0);                                                       duration for usual answer
exten=>s,n(rec5),       GotoIf($[${IN}=0]?:ju1)
exten=>s,n,             Set(A_FILE=${WavDir}/A_${INT_FNAME})
exten=>s,n,             Verbose(Answer file = ${A_FILE})
exten=>s,n,             Verbose(Current time = ${STRFTIME(${EPOCH},America/New_York,%d%m%Y_%H%M%S)})

;---------------- Start of intervew ---------------------------
exten=>s,n,             Set(FILE_NAME=${WavDir}/A_${DES}_${DTMF}_${NAMENUM}_${INTV_LANG}_${STRFTIME(${EPOCH},America/New_York,%d%m%Y_%H%M%S)})
;exten=>s,n,            Monitor(wav,${FILE_NAME},o)
exten=>s,n,             Monitor(wav,${FILE_NAME})
exten=>s,n,             Goto(ju2)
exten=>s,n(ju1),        Verbose(Current time = ${STRFTIME(${EPOCH},America/New_York,%d%m%Y_%H%M%S)})
exten=>s,n,             UnPauseMonitor()
exten=>s,n(ju2),        Wait(${DUR})
exten=>s,n,             PauseMonitor()
exten=>s,n,             SET(DURATION=$[${DURATION}+${DUR}])
exten=>s,n,             Verbose(Current Duration = ${DURATION})
exten=>s,n(check),      SET(IN=$[${IN}+1])
exten=>s,n,             GotoIf($[${IN}=${NUMQUEST}]?:ct);               check a condition of cycle end
exten=>s,n,             GotoIf($["${REC}"="0"]?return)
;----------------- Finish of interview --------------------------
exten=>s,n,             StopMonitor()
exten=>s,n,             Wait(1); for closing the file
exten=>s,n,             System(chmod -c 0777 ${FILE_NAME}*.wav)
exten=>s,n,             Verbose(The interview is completed : callNumber=${COUNT}   callerID=${USER})
exten=>s,n(return),     Return


[sub-IRN-post-interwiev]
;Sending interview information file to CallViewer to check the quality of recorded responses in wav audio file.
;If the quality is bad, then go to 3-rd and last round of interview.


;------------ MS: Send message "interview" --------------------------------------

exten=>s,1(start),     Verbose(sub-post-interwiev)

exten=>s,n,            Set(msg_time= "{\n\\"date\\": \\"${STRFTIME(${EPOCH},America/New_York,%F)}\\",\n\\"time\\": \\"${STRFTIME(${EPOCH},America/New_York,%T)}\\",\n\\"utc_offset\\": \\"${STRFTIME(${EPOCH},America/New_York,%z):0:3}:00\\"\n}")
exten=>s,n,            System(echo -e ${msg_time}  > ${RraDir}/tmp/Input_Sync/endQuestSet_${DES}.txt)
exten=>s,n,            System(chmod -c 0777 ${RraDir}/tmp/Input_Sync/endQuestSet_${DES}.txt)
exten=>s,n,            System(mv ${RraDir}/tmp/Input_Sync/endQuestSet_${DES}.txt ${RraDir}/tmp/Input)


exten=>s,n,            Verbose(   Sent "interview" message : callNumber=${COUNT}   callerID=${USER})
exten=>s,n,            Playback(${IntroDir}/${LANG}/${SPEAKER}/RRA_Phrase_13_${LANG}_${SPEAKER}); Please wait while the system processes...
exten=>s,n,            Wait(2)


;------------ MS: Analysis of quality control -----------------------------------

exten=>s,n,            Set(MSSG=${RraDir}/tmp/Output/endQuestSet_${DES}.txt)
exten=>s,n,            Gosub(sub-file_exist_check,s,1)



exten=>s,n,            Set(QUAL=${FILE(${RraDir}/tmp/Output/endQuestSet_${DES}.txt)})
exten=>s,n,            Verbose(      Result of QuaControl : Quality = ${QUAL}     callNumber=${COUNT}        callerID=${USER})
exten=>s,n,            GotoIf($[${QUAL} = OK]?QC_OK); to deleting of BL information

exten=>s,n,            GotoIf($[${ATTEMPT} >= 3]?hangup)

exten=>s,n,            GotoIf($[${QUAL}=IR1]?ir1)       ; The system was not able to hear all of your responses
exten=>s,n,            GotoIf($[${QUAL}=IR2]?ir2)       ; Your responses were too loud
exten=>s,n,            GotoIf($[${QUAL}=IR3]?ir3)       ; The system did not hear all of your responses
exten=>s,n,            GotoIf($[${QUAL}=IR4]?ir4)       ; You are answering the question too quickly
exten=>s,n,            GotoIf($[${QUAL}=IR5]?ir5)       ; You did not answer all the questions immediately after the tone
exten=>s,n,            GotoIf($[${QUAL}=IR6]?ir6)       ; The system detected unknown background sounds during the interview
exten=>s,n,            GotoIf($[${QUAL}=IR7]?ir7)       ; The system detected unknown sounds when you responded yes or no.

exten=>s,n,            Set(HC=127); Internetworking, unspecified

exten=>s,n,            Verbose(          The interview callNumber=${COUNT}  callerID=${USER} was not checked)

exten=>s,n(tech_prob), Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_IRN_8_${LANG}_${SPEAKER});
exten=>s,n,            Goto(sub-hangup,s,hangup)
exten=>s,n(hangup),    Goto(sub-hangup,s,ending2)


;------------: Play audio recomendations --------------------------------------------------------

exten=>s,n(ir1),       Playback(${IntroDir}/${LANG}/${SPEAKER}/IR-1_${LANG}_${SPEAKER});
exten=>s,n,            Wait(1)
exten=>s,n,            Goto(repeat1)

exten=>s,n(ir2),       Playback(${IntroDir}/${LANG}/${SPEAKER}/IR-2_${LANG}_${SPEAKER});
exten=>s,n,            Wait(1)
exten=>s,n,            Goto(repeat1)

exten=>s,n(ir3),       Playback(${IntroDir}/${LANG}/${SPEAKER}/IR-3_${LANG}_${SPEAKER});
exten=>s,n,            Wait(1)
exten=>s,n,            Goto(repeat1)

exten=>s,n(ir4),       Playback(${IntroDir}/${LANG}/${SPEAKER}/IR-4_${LANG}_${SPEAKER});
exten=>s,n,            Wait(1)
exten=>s,n,            Goto(repeat1)

exten=>s,n(ir5),       Playback(${IntroDir}/${LANG}/${SPEAKER}/IR-5_${LANG}_${SPEAKER});
exten=>s,n,            Wait(1)
exten=>s,n,            Goto(repeat1)

exten=>s,n(ir6),       Playback(${IntroDir}/${LANG}/${SPEAKER}/IR-6_${LANG}_${SPEAKER});
exten=>s,n,            Wait(1)
exten=>s,n,            Goto(repeat1)

exten=>s,n(ir7),       Playback(${IntroDir}/${LANG}/${SPEAKER}/IR-7_${LANG}_${SPEAKER});
exten=>s,n,            Wait(1)
exten=>s,n,            Goto(repeat1)



;------------ BL: Quality Control --------------------------------------------------------

exten=>s,n(repeat1),   GotoIf($[${ATTEMPT} = ${LimAtt_QC}]?failed_QC)

exten=>s,n,            Set(ATTEMPT=$[${ATTEMPT} + 1])
exten=>s,n,            GotoIf($["${ATTEMPT}" = "2"]?ending)

exten=>s,n,            Playback(${IntroDir}/${LANG}/${SPEAKER}/RRA_Phrase_7_${LANG}_${SPEAKER}); the final attempt of interview
exten=>s,n,            Gosub(sub-IRN-interview,s,repeat)
exten=>s,n,            GotoIf($["${ATTEMPT}" > "0"]?start)

;------------ BL: Count failed call for QC -----------------------------------------------

exten=>s,n(failed_QC), Verbose(BL:   Two failed Attempts of Quality Control - failed call)

exten=>s,n(rep_begQC), Set(COUNTQC=${DB(countQC/${clrID})})
exten=>s,n,            GotoIf($[${ISNULL(${COUNTQC})}]?:cont6)
exten=>s,n,            Verbose(BL:   Create new countQC record for callerID=${clrID})
exten=>s,n,            Set(DB(countQC/${clrID})=1)
exten=>s,n,            Verbose(BL:   DB -> countQC/${clrID} = ${DB(countQC/${clrID})})
exten=>s,n,            Goto(hangup)


exten=>s,n(cont6),     Verbose()
exten=>s,n,            Set(COUNTQC=$[${COUNTQC} + 1])
exten=>s,n,            Verbose(BL:   COUNTQC = ${COUNTQC})
exten=>s,n,            Set(DB(countQC/${clrID})=${COUNTQC})
exten=>s,n,            GotoIf($[${COUNTQC} = ${LimCall_QC}]?:hangup)


;------------ BL: Send message "toQCBlackList" ------------------------------------------

exten=>s,n,            Verbose(BL:   The callerID=${clrID} is placed to QC Black List)

exten=>s,n,            Set(msg_time= "{\n\\"date\\": \\"${STRFTIME(${EPOCH},America/New_York,%F)}\\",\n\\"time\\": \\"${STRFTIME(${EPOCH},America/New_York,%T)}\\",\n\\"utc_offset\\": \\"${STRFTIME(${EPOCH},America/New_York,%z):0:3}:00\\"\n}")
exten=>s,n,            System(echo -e ${msg_time}  > ${RraDir}/tmp/Input_Sync/toQCBlackList_${DES}.txt)
exten=>s,n,            System(chmod -c 0777 ${RraDir}/tmp/Input_Sync/toQCBlackList_${DES}.txt)
exten=>s,n,            System(mv ${RraDir}/tmp/Input_Sync/toQCBlackList_${DES}.txt ${RraDir}/tmp/Input)


exten=>s,n,            Goto(hangup)


;------------ BL: Delete countQC information ---------------------------------------------

exten=>s,n(QC_OK),     Set(COUNTQC=${DB(countQC/${clrID})})
exten=>s,n,            Set(ATTEMPT=$[${ATTEMPT} + 1])
exten=>s,n,            GotoIf($[${ISNULL(${COUNTQC})}]?ending); if the record does not exist then to ending
exten=>s,n,            Verbose(BL:    Delete DB:countQC/${clrID} COUNTQC=${COUNTQC})
exten=>s,n,            NoOp(${DB_DELETE(countAC/${clrID})})
exten=>s,n(ending),    Return

[sub-TIP-interview]

exten => 5001,1,Gosub(sub-pre-answer,s,1)

exten => 5001,n,            Answer()
exten => 5001,n,            Set(FULL_AUDIO=${WavDir}/FullCallRecord/${NodeID}_${DES}_${from}_${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => 5001,n,            MixMonitor(${FULL_AUDIO}.wav)

exten => 5001,n,            Wait(2)

exten => 5001,n,Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_TIP_1_${LANG}_${SPEAKER}); Hello, you have reached the automated tip line.  Using this Tip Line you can anonymously report information about criminal or terrorist activity by leaving a confidential message of up to 2-minutes.
exten => 5001,n,Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_TIP_2_${LANG}_${SPEAKER}); As a minimum, please describe who is involved, details about the criminal or terrorist activity, as well as when and where the activity occurred or will occur.  In order to confirm the information you provide is genuine, you must answer several automated verification questions after leaving your tip. The verification process is also completely anonymous. Your help in confirming the validity of your information will ensure we can assign the proper resources to your tip.
exten => 5001,n,Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_TIP_3_${LANG}_${SPEAKER}); When you hear the following tone (beep) please leave your message.  If you finish before 2-minutes please press the pound or hash tag key on your telephone to answer the verification questions. Please leave your tip now (beep).

exten => 5001,n,Set(AUDIO_REPORT=${WavDir}/FullCallRecord/${DES}_TIP_${from}_${STRFTIME(${EPOCH},America/New_York,%Y%m%d-%H%M%S)})

exten => 5001,n,Record(${AUDIO_REPORT}:wav,,120,q)

exten => 5001,n,Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_TIP_4_${LANG}); You will now be asked three simple questions that only require yes or no responses to verify the information you just provided.  You will be asked the questions two separate times.  Please answer the questions with only a yes or no
exten => 5001,n,Wait(1)

exten => 5001,n,Verbose( FIRST ROUND )
exten => 5001,n,Playback(${Qsts}/Q_TIP01_${LANG}_Troy);
exten => 5001,n,Wait(5)
exten => 5001,n,Playback(${Qsts}/Q_TIP02_${LANG}_Troy);
exten => 5001,n,Wait(5)
exten => 5001,n,Playback(${Qsts}/Q_TIP03_${LANG}_Troy);
exten => 5001,n,Wait(5)

exten => 5001,n,Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_TIP_5_${LANG}_${SPEAKER}); You will now be asked the same questions one more time.  The questions are about to begin
exten => 5001,n,Wait(1)

exten => 5001,n,Verbose( SECOND ROUND )
exten => 5001,n,Set(FILE_NAME=${WavDir}/A_${DES}_000000000_03_Eng_${STRFTIME(${EPOCH},America/New_York,%d%m%Y_%H%M%S)})
exten => 5001,n,Playback(${Qsts}/Q_TIP01_${LANG}_Troy);
exten => 5001,n,Record(${FILE_NAME}:wav,,5,qa)
exten => 5001,n,Playback(${Qsts}/Q_TIP02_${LANG}_Troy);
exten => 5001,n,Record(${FILE_NAME}:wav,,5,qa)
exten => 5001,n,Playback(${Qsts}/Q_TIP03_${LANG}_Troy);
exten => 5001,n,Record(${FILE_NAME}:wav,,5,qa)

exten => 5001,n,Verbose(SUB-TIP-HUNGUP)
exten => 5001,n,Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_TIP_6_${LANG}_${SPEAKER}); You will now be asked the same questions one more time.  The questions are about to begin
exten => 5001,n,WaitExten(10)

exten =>1,1,             Verbose(It was pressed key 1)
exten =>1,n,             Playback(${IntroDir}/${LANG}/${SPEAKER}/Phrase_TIP_7_${LANG}_${SPEAKER}); At this time you can leave your telephone number or other contact information if you would like to speak with us directly.  After leaving your contact information, please press the pound or hash tag key on your telephone, or simply hang up, to end the call. Please leave your contact information after the tone (beep).
exten =>1,n,             Record(${AUDIO_REPORT}:wav,,60,qa)
exten =>1,n,             Hangup()

exten=>i,1,             Verbose(Not 1 was pressed )
exten=>i,n,             Hangup()

exten=>t,1,             Verbose(No key was pressed for defined time )
exten=>t,n,             Hangup()



[iunlim]

exten => 333,1,        Set(ATT_ACCESS=1)
exten => 333,n,        Gosub(sub-pre-answer,s,1)
exten => 333,n(ans),   Gosub(sub-IRN-answer,s,1)
exten => 333,n,        Gosub(chatbot-AC-provide-new,s,1)
;exten => 333,n,        Set(LANG=${INTV_LANG})
exten => 333,n,        Set(REC=1)
exten => 333,n,        Set(ATTEMPT=1)
exten => 333,n,        Gosub(sub-IRN-interview,s,1)
exten => 333,n,        Gosub(sub-IRN-post-interwiev,s,1)
exten => 333,n,        Set(REC=1)
exten => 333,n,        Gosub(sub-IRN-interview,s,st)
exten => 333,n,        Gosub(sub-IRN-post-interwiev,s,1)
exten => 333,n,        Gosub(sub-hangup,s,1)






exten => 444,1,        Set(CHANNEL(hangup_handler_push)=handler,s,1)
exten=>  444,n,        Set(ATT_ACCESS=1)
exten => 444,n,        Gosub(sub-pre-answer,s,1)
exten => 444,n,        Gosub(sub-URL-IRN-answer,s,1)
exten => 444,n,        Gosub(chatbot-AC-provide-new,s,1)
exten => 444,n,        Set(LANG=${INTV_LANG})
exten => 444,n,        Set(REC=1)
exten => 444,n,        Set(ATTEMPT=1)
exten => 444,n,        Gosub(sub-IRN-interview,s,ft)
exten => 444,n,        Gosub(sub-IRN-post-interwiev,s,1)
exten => 444,n,        Set(REC=1)
exten => 444,n,        Gosub(sub-IRN-interview,s,st)
exten => 444,n,        Gosub(sub-IRN-post-interwiev,s,1)
exten => 444,n,        Gosub(sub-hangup,s,1)

